# A customized version of the Elastic Beanstalk Nginx Configuration File
user                            nginx;
error_log                       /var/log/nginx/error.log warn;
pid                             /var/run/nginx.pid;
worker_processes                auto;
worker_rlimit_nofile            31251;

events {
    worker_connections          1024;
}

http {
    include                     /etc/nginx/mime.types;
    default_type                application/octet-stream;

    log_format                  main  '$remote_addr - $remote_user [$time_local] "$request" '
                                      '$status $body_bytes_sent "$http_referer" '
                                      '"$http_user_agent" "$http_x_forwarded_for"';

    include                     conf.d/*.conf;

    map $http_upgrade $connection_upgrade {
        default                 "upgrade";
    }

    server {
        # ports on which to listen
        listen                  80;
        listen                  443 ssl;

        # Include the SSL certificates for your domains. See 02_files.config for how to pull these assets down.
        # ssl_certificate         /etc/pki/tls/certs/certificate.crt;
        # ssl_certificate_key     /etc/pki/tls/certs/private-key.pem;

        access_log              /var/log/nginx/access.log main;
        charset                 utf-8;

        add_header              ca "1; mode=block";
        add_header              X-Content-Type-Options "nosniff";

        client_header_timeout   60;
        client_body_timeout     60;
        keepalive_timeout       60;
        gzip                    on;
        gzip_comp_level         4;
        gzip_types              text/plain text/css application/json text/javascript application/javascript application/x-javascript text/xml application/xml application/xml+rss image/svg+xml;

        # Include the Elastic Beanstalk generated locations
        include                 conf.d/elasticbeanstalk/*.conf;

        # Laravel additions - mix in properties from the Laravel docs
        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }

        # Use client-side caching for static assets
        location ~* \.(ico|svg|js|css|png|jpg|jpeg|gif|ico)$ {
            expires max;
            add_header Cache-Control "public";
        }

        location = /favicon.ico { access_log off; log_not_found off; }
        location = /robots.txt  { access_log off; log_not_found off; }

        error_page 404 /index.php;

        location ~ /\.(?!well-known).* {
            deny all;
        }
    }
}
