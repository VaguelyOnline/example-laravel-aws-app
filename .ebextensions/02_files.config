# You may have assets that you need to pull down from S3 storage. In this example, the TLS domain certificates are hosted in a private
# bucket. In order for this script to be able to pull down the given bucket, the bucket policy must enable the AWS role named
# aws-elasticbeanstalk-ec2-role to have read access to the given S3 Bucket
Resources:
    AWSEBAutoScalingGroup:
        Metadata:
            AWS::CloudFormation::Authentication:
                S3Auth:
                    type: "s3"
                    buckets: ["name-of-bucket-containing-certificates"]
                    roleName:
                        "Fn::GetOptionSetting":
                            Namespace: "aws:autoscaling:launchconfiguration"
                            OptionName: "IamInstanceProfile"
                            DefaultValue: "aws-elasticbeanstalk-ec2-role"

# Configure PHP with any custom project settings by creating a project specific PHP INI file.
files:
    /etc/php.d/project.ini:
        mode: "000644"
        owner: root
        group: root
        content: |
            upload_max_filesize = 500M
            post_max_size = 500M
            always_populate_raw_post_data = -1
            memory_limit = 512M


    # Pull down assets from S3 - in this case, TLS certificates hosted in an S3 bucket. Authentication for the private
    # S3 bucket is achieved using the auth settings defined above
    /etc/pki/tls/certs/certificate.crt:
        mode: "000755"
        owner: root
        group: root
        authentication: "S3Auth"
        source: https://name-of-bucket-containing-certificates.s3.amazonaws.com/certificates/certificate.crt

    /etc/pki/tls/certs/private-key.pem:
        mode: "000755"
        owner: root
        group: root
        authentication: "S3Auth"
        source: https://name-of-bucket-containing-certificates.s3.amazonaws.com/certificates/private-key.pem
